// docs/.vitepress/config.mts
import { defineConfig } from "file:///D:/MY_OBJECT_MAP/Vue/chiko_blog/node_modules/.pnpm/vitepress@1.6.3_@algolia+cl_7fb8a1221455b4fdc44db748f558e455/node_modules/vitepress/dist/node/index.js";

// docs/.vitepress/blog-theme.ts
import { getThemeConfig } from "file:///D:/MY_OBJECT_MAP/Vue/chiko_blog/node_modules/.pnpm/@sugarat+theme@0.5.4_@eleme_b277bbe60ffe59f640bbc73322d323c5/node_modules/@sugarat/theme/node.mjs";
var blogTheme = getThemeConfig({
  // ÂºÄÂêØRSSÊîØÊåÅ
  // RSS,
  // ÊêúÁ¥¢
  // ÈªòËÆ§ÂºÄÂêØpagefindÁ¶ªÁ∫øÁöÑÂÖ®ÊñáÊêúÁ¥¢ÊîØÊåÅÔºàÂ¶Ç‰ΩøÁî®ÂÖ∂ÂÆÉÁöÑÂèØ‰ª•ËÆæÁΩÆ‰∏∫falseÔºâ
  // search: false,
  // markdown ÂõæË°®ÊîØÊåÅÔºà‰ºöÂ¢ûÂä†‰∏ÄÂÆöÁöÑÊûÑÂª∫ËÄóÊó∂Ôºâ
  // mermaid: true
  // È°µËÑö
  footer: {
    // message Â≠óÊÆµÊîØÊåÅÈÖçÁΩÆ‰∏∫HTMLÂÜÖÂÆπÔºåÈÖçÁΩÆÂ§öÊù°ÂèØ‰ª•ÈÖçÁΩÆ‰∏∫Êï∞ÁªÑ
    // message: '‰∏ãÈù¢ ÁöÑÂÜÖÂÆπÂíåÂõæÊ†áÈÉΩÊòØÂèØ‰ª•‰øÆÊîπÁöÑÂô¢ÔºàÂΩìÁÑ∂Êú¨Êù°ÂÜÖÂÆπ‰πüÊòØÂèØ‰ª•ÈöêËóèÁöÑÔºâ',
    copyright: "MIT License | \u5343\u5B50"
    // icpRecord: {
    //   name: 'ËúÄICPÂ§á19011724Âè∑',
    //   link: 'https://beian.miit.gov.cn/'
    // },
    // securityRecord: {
    //   name: 'ÂÖ¨ÁΩëÂÆâÂ§áxxxxx',
    //   link: 'https://www.beian.gov.cn/portal/index.do'
    // },
  },
  // ‰∏ªÈ¢òËâ≤‰øÆÊîπ
  themeColor: "el-yellow",
  // ÊñáÁ´†ÈªòËÆ§‰ΩúËÄÖ
  author: "\u5343\u5B50",
  // ÂèãÈìæ
  friend: [
    {
      nickname: "Vitepress",
      des: "Vite & Vue Powered Static Site Generator",
      avatar: "https://vitepress.dev/vitepress-logo-large.webp",
      url: "https://vitepress.dev/"
    }
  ],
  // ÂÖ¨Âëä
  popover: {
    title: "\u516C\u544A",
    body: [
      // { type: 'text', content: 'üëáÂÖ¨‰ºóÂè∑üëá---üëá ÂæÆ‰ø° üëá' },
      // {
      //   type: 'image',
      //   src: 'https://img.cdn.sugarat.top/mdImg/MTYxNTAxODc2NTIxMA==615018765210~fmt.webp'
      // },
      // {
      //   type: 'text',
      //   content: 'Ê¨¢ËøéÂ§ßÂÆ∂Âä†Áæ§&ÁßÅ‰ø°‰∫§ÊµÅ'
      // },
      // {
      //   type: 'text',
      //   content: 'ÊñáÁ´†È¶ñ/ÊñáÂ∞æÊúâÁæ§‰∫åÁª¥Á†Å',
      //   style: 'padding-top:0'
      // },
      // {
      //   type: 'button',
      //   content: '‰ΩúËÄÖÂçöÂÆ¢',
      //   link: 'https://sugarat.top'
      // },
      // {
      //   type: 'button',
      //   content: 'Âä†Áæ§‰∫§ÊµÅ',
      //   props: {
      //     type: 'success'
      //   },
      //   link: 'https://theme.sugarat.top/group.html',
      // }
    ],
    duration: 0
  }
});

// docs/.vitepress/config.mts
var config_default = defineConfig({
  // ÁªßÊâøÂçöÂÆ¢‰∏ªÈ¢ò(@sugarat/theme)
  extends: blogTheme,
  // base,
  lang: "zh-cn",
  title: "\u5343\u5B50\u7B14\u8BB0",
  description: "\u8BB0\u5F55\u5DE5\u4F5C\u751F\u6D3B\u4E2D\u7684\u4E00\u4E9B\u968F\u7B14",
  lastUpdated: true,
  // ËØ¶ËßÅÔºöhttps://vitepress.dev/zh/reference/site-config#head
  head: [
    // ÈÖçÁΩÆÁΩëÁ´ôÁöÑÂõæÊ†áÔºàÊòæÁ§∫Âú®ÊµèËßàÂô®ÁöÑ tab ‰∏äÔºâ
    // ['link', { rel: 'icon', href: `${base}favicon.ico` }], // ‰øÆÊîπ‰∫Ü base ËøôÈáå‰πüÈúÄË¶ÅÂêåÊ≠•‰øÆÊîπ
    ["link", { rel: "icon", href: "/favicon.ico" }]
  ],
  themeConfig: {
    // Â±ïÁ§∫ 2,3 Á∫ßÊ†áÈ¢òÂú®ÁõÆÂΩï‰∏≠
    outline: {
      level: [2, 3],
      label: "\u76EE\u5F55"
    },
    // ÈªòËÆ§ÊñáÊ°à‰øÆÊîπ
    returnToTopLabel: "\u56DE\u5230\u9876\u90E8",
    sidebarMenuLabel: "\u76F8\u5173\u6587\u7AE0",
    lastUpdatedText: "\u4E0A\u6B21\u66F4\u65B0\u4E8E",
    // ËÆæÁΩÆlogo
    logo: "/logo.png",
    // editLink: {
    //   pattern:
    //     'https://github.com/ATQQ/sugar-blog/tree/master/packages/blogpress/:path',
    //   text: 'Âéª GitHub ‰∏äÁºñËæëÂÜÖÂÆπ'
    // },
    nav: [
      { text: "\u9996\u9875", link: "/" },
      { text: "\u5173\u4E8E\u4F5C\u8005", link: "https://sugarat.top/aboutme.html" }
    ],
    socialLinks: [
      {
        icon: "github",
        link: "git@github.com:chen-ziwen/chiko_blog.git"
      }
    ]
  }
});
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
